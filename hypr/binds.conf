

# See https://wiki.hyprland.org/Configuring/Keywords/
$mainMod = SUPER # Sets "Windows" key as main modifier
$brightness = ~/.config/hypr/scripts/brightness.sh
$volume = ~/.config/hypr/scripts/volume.sh
$browser = brave
$terminal = kitty
$fileManager = $terminal yazi 
#$menu =  rofi -show drun -no-history -matching fuzzy -drun-match-fields name -no-tokenize
$menu= tofi-drun --config ~/.config/tofi/dmenu --font /usr/share/fontJetBrainsMono-Regular.ttf --hint-font false --ascii-input true --late-keyboard-init 
# Example binds, see https://wiki.hyprland.org/Configuring/Binds/ for more
bind = $mainMod, return, exec, $terminal
bind = $mainMod ALT , return , exec , alacritty
bind = $mainMod, R , exec , pkill waybar ; waybar -c ~/.config/waybar/config-hyprland.jsonc &
bind = $mainMod , S, exec, $browser
bind = $mainMod, C, killactive,
bind = $mainMod SHIFT , Q , exit,
bind = $mainMod, E, exec, $fileManager
bind = $mainMod, F, togglefloating,
bind = $mainMod, X, exec , ~/.config/rofi/powermenu/powermenu.sh 
bind = $mainMod, P, pseudo, 
bind = $mainMod, SPACE, togglesplit, # dwindle
bind = $mainMod, Z , fullscreen
bind = $mainMod, O , exec, $menu | xargs hyprctl dispatch exec --
# Move focus with mainMod + arrow keys
bind = $mainMod, h, movefocus, l
bind = $mainMod, l, movefocus, r
bind = $mainMod, k, movefocus, u
bind = $mainMod, j, movefocus, d
bind = $mainMod, A ,exec, ~/.config/hypr/scripts/choose-animation.sh 
# Switch workspaces with mainMod + [0-9]
bind = $mainMod, 1, workspace, 1
bind = $mainMod, 2, workspace, 2
bind = $mainMod, 3, workspace, 3
bind = $mainMod, 4, workspace, 4
bind = $mainMod, 5, workspace, 5
bind = $mainMod, 6, workspace, 6
bind = $mainMod, 7, workspace, 7
bind = $mainMod, 8, workspace, 8
bind = $mainMod, 9, workspace, 9
bind = $mainMod, 0, workspace, 10

# Move active window to a workspace with mainMod + SHIFT + [0-9]
bind = $mainMod SHIFT, 1, movetoworkspacesilent, 1
bind = $mainMod SHIFT, 2, movetoworkspacesilent, 2
bind = $mainMod SHIFT, 3, movetoworkspacesilent, 3
bind = $mainMod SHIFT, 4, movetoworkspacesilent, 4
bind = $mainMod SHIFT, 5, movetoworkspacesilent, 5
bind = $mainMod SHIFT, 6, movetoworkspacesilent, 6
bind = $mainMod SHIFT, 7, movetoworkspacesilent, 7
bind = $mainMod SHIFT, 8, movetoworkspacesilent, 8
bind = $mainMod SHIFT, 9, movetoworkspacesilent, 9
bind = $mainMod SHIFT, 0, movetoworkspacesilent, 10
#move windows 
 
bind = SUPER SHIFT, left, movewindow, l
bind = SUPER SHIFT, right, movewindow, r
bind = SUPER SHIFT, up, movewindow, u
bind = SUPER SHIFT, down, movewindow, d 

#resize active window

bind = SUPER CTRL, left, resizeactive, -20 0
bind = SUPER CTRL, right, resizeactive, 20 0
bind = SUPER CTRL, up, resizeactive, 0 -20
bind = SUPER CTRL, down, resizeactive, 0 20


# Example special workspace (scratchpad)
#bind = $mainMod, S, togglespecialworkspace, magic
#bind = $mainMod SHIFT, S, movetoworkspace, special:magic

# Scroll through existing workspaces with mainMod + scroll
bind = $mainMod, mouse_down, workspace, e+1
bind = $mainMod, mouse_up, workspace, e-1

# Move/resize windows with mainMod + LMB/RMB and dragging
bindm = $mainMod, mouse:272, movewindow
bindm = $mainMod, mouse:273, resizewindow

# Laptop multimedia keys for volume and LCD brightness
bindel = ,XF86AudioRaiseVolume, exec, $volume inc 
bindel = ,XF86AudioLowerVolume, exec, $volume dec 
bindel = ,XF86AudioMute, exec, $volume toggle
bindel = ,XF86AudioMicMute, exec, wpctl set-mute @DEFAULT_AUDIO_SOURCE@ toggle
bindel = ,XF86MonBrightnessUp, exec, $brightness inc 
bindel = ,XF86MonBrightnessDown, exec,$brightness dec

bind = ,Print, exec, grim ~/Pictures/screenshot_$(date +%Y-%m-%d_%H-%M-%S).png && notify-send "Screenshot Captured" "Saved to ~/Pictures"
bind = ,Shift+Print, exec, grim -g "$(slurp)" ~/Pictures/screenshot_area_$(date +%Y-%m-%d_%H-%M-%S).png && notify-send "Screenshot Captured" "Area screenshot saved to ~/Pictures"
# Requires playerctl
bindl = , XF86AudioNext, exec, playerctl next
bindl = , XF86AudioPause, exec, playerctl play-pause
bindl = , XF86AudioPlay, exec, playerctl play-pause
bindl = , XF86AudioPrev, exec, playerctl previous
